---
import { type CollectionEntry, getCollection } from 'astro:content';
import CTFLayout from '../../layouts/CTFLayout.astro';

export async function getStaticPaths() {
  const entries = await getCollection('ctf', ({ data }) => data.draft !== true);
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: entry,
  }));
}

type Props = CollectionEntry<'ctf'>;

const challenge = Astro.props as Props;
const { Content } = await challenge.render();
const launch = challenge.data.launchDate.toLocaleDateString(undefined, {
  year: 'numeric', month: 'long', day: 'numeric'
});
const labelLower = (challenge.data.releaseLabel ?? '').toLowerCase().trim();
const isPre = challenge.data.isReleased && /alpha|beta|rc|preview/.test(labelLower);
const statusLabel = !challenge.data.isReleased
  ? '⏳ Not Released'
  : labelLower.includes('beta')
    ? 'β beta'
    : labelLower.includes('alpha')
      ? 'α alpha'
      : labelLower
        ? `✅ ${challenge.data.releaseLabel}`
        : '✅ Released';
const statusClasses = !challenge.data.isReleased
  ? 'px-2 py-1 rounded uppercase select-none opacity-70 cursor-not-allowed pointer-events-none border border-dashed border-term-green/30'
  : isPre
    ? 'px-2 py-1 rounded uppercase border border-term-amber/60 text-term-amber'
    : 'px-2 py-1 rounded uppercase border border-term-green/60 text-term-green';
---

<CTFLayout title={challenge.data.title} description={challenge.data.description}>
  <article class="space-y-6">
    <header class="border border-term-green/40 rounded-md p-4">
      <div class="flex items-center justify-between gap-4">
        <div class="text-sm text-term-green/80">
          <p><strong>Launch:</strong> {launch}</p>
        </div>
        <div class="flex items-center gap-2 text-xs">
          <span class="px-2 py-1 border border-term-green/50 rounded uppercase">{challenge.data.category}</span>
          <span class="px-2 py-1 border border-term-green/50 rounded uppercase">{challenge.data.difficulty}</span>
          <span class={statusClasses} aria-disabled={!challenge.data.isReleased} title={statusLabel}>{statusLabel}</span>
        </div>
      </div>
      {challenge.data.tags.length > 0 && (
        <div class="mt-3 text-xs flex flex-wrap gap-2">
          {challenge.data.tags.map((t) => (
            <span class="px-2 py-0.5 border border-term-green/40 rounded">#{t}</span>
          ))}
        </div>
      )}
    </header>

    {challenge.data.downloads.length > 0 && (
      <section class="terminal-window">
        <div class="terminal-header">
          <span class="text-xs text-term-green/80">DOWNLOADS</span>
          <span class="text-xs text-term-green/60">{challenge.data.downloads.length} file(s)</span>
        </div>
        <div class="flex flex-wrap gap-3">
          {challenge.data.downloads.map((d) => (
            <a href={d.url} target="_blank" rel="noopener noreferrer" class="px-3 py-1 border border-term-green/50 rounded hover:text-term-green-dark">{d.label}</a>
          ))}
        </div>
      </section>
    )}

    <section class="prose prose-invert max-w-none">
      <Content />
    </section>

    <footer class="pt-4 flex items-center justify-between text-sm">
      {challenge.data.isReleased ? (
        <a href={challenge.data.repoUrl} target="_blank" rel="noopener noreferrer" class="underline underline-offset-4 decoration-dotted hover:text-term-green-dark">View Source ↗</a>
      ) : (
        <span class="opacity-70 cursor-not-allowed select-none">View Source ↗</span>
      )}
      <a href="/ctf" class="underline underline-offset-4 decoration-dotted hover:text-term-green-dark">← Back to catalog</a>
    </footer>
  </article>
</CTFLayout>
